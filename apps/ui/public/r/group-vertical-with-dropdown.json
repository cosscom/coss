{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "group-vertical-with-dropdown",
  "type": "registry:example",
  "description": "Vertical group with dropdown",
  "registryDependencies": [
    "@coss/group",
    "@coss/button",
    "@coss/select"
  ],
  "files": [
    {
      "path": "registry/default/examples/group-vertical-with-dropdown.tsx",
      "content": "import { FilterIcon, XIcon } from \"lucide-react\"\n\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Group, GroupItem, GroupSeparator } from \"@/registry/default/ui/group\"\nimport {\n  Select,\n  SelectItem,\n  SelectPopup,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/default/ui/select\"\n\nconst statusItems = [\n  { label: \"All Status\", value: \"all\" },\n  { label: \"Active\", value: \"active\" },\n  { label: \"Pending\", value: \"pending\" },\n  { label: \"Archived\", value: \"archived\" },\n]\n\nconst categoryItems = [\n  { label: \"All Categories\", value: \"all\" },\n  { label: \"Design\", value: \"design\" },\n  { label: \"Development\", value: \"development\" },\n  { label: \"Marketing\", value: \"marketing\" },\n]\n\nexport default function GroupVerticalWithDropdown() {\n  return (\n    <Group orientation=\"vertical\">\n      <GroupItem\n        render={\n          <Select items={statusItems} defaultValue=\"all\">\n            <SelectTrigger>\n              <FilterIcon />\n              <SelectValue />\n            </SelectTrigger>\n            <SelectPopup>\n              {statusItems.map(({ label, value }) => (\n                <SelectItem key={value} value={value}>\n                  {label}\n                </SelectItem>\n              ))}\n            </SelectPopup>\n          </Select>\n        }\n      />\n      <GroupSeparator orientation=\"horizontal\" />\n      <GroupItem\n        render={\n          <Select items={categoryItems} defaultValue=\"all\">\n            <SelectTrigger>\n              <FilterIcon />\n              <SelectValue />\n            </SelectTrigger>\n            <SelectPopup>\n              {categoryItems.map(({ label, value }) => (\n                <SelectItem key={value} value={value}>\n                  {label}\n                </SelectItem>\n              ))}\n            </SelectPopup>\n          </Select>\n        }\n      />\n      <GroupSeparator orientation=\"horizontal\" />\n      <GroupItem render={<Button variant=\"outline\">Apply</Button>} />\n      <GroupSeparator orientation=\"horizontal\" />\n      <GroupItem\n        render={\n          <Button variant=\"outline\" aria-label=\"Clear filters\">\n            <XIcon />\n            Clear\n          </Button>\n        }\n      />\n    </Group>\n  )\n}\n",
      "type": "registry:example"
    }
  ],
  "categories": [
    "group"
  ]
}