{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "autocomplete-form",
  "type": "registry:example",
  "description": "Autocomplete form",
  "registryDependencies": [
    "@coss/autocomplete",
    "@coss/form",
    "@coss/field"
  ],
  "files": [
    {
      "path": "registry/default/examples/autocomplete-form.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\n\nimport {\n  Autocomplete,\n  AutocompleteEmpty,\n  AutocompleteInput,\n  AutocompleteItem,\n  AutocompleteList,\n  AutocompletePopup,\n} from \"@/registry/default/ui/autocomplete\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport { Field, FieldError, FieldLabel } from \"@/registry/default/ui/field\"\nimport { Form } from \"@/registry/default/ui/form\"\n\nconst items = [\n  { label: \"Apple\", value: \"apple\" },\n  { label: \"Banana\", value: \"banana\" },\n  { label: \"Orange\", value: \"orange\" },\n  { label: \"Grape\", value: \"grape\" },\n  { label: \"Strawberry\", value: \"strawberry\" },\n  { label: \"Mango\", value: \"mango\" },\n  { label: \"Pineapple\", value: \"pineapple\" },\n  { label: \"Kiwi\", value: \"kiwi\" },\n  { label: \"Peach\", value: \"peach\" },\n  { label: \"Pear\", value: \"pear\" },\n]\n\nexport default function AutocompleteForm() {\n  const [loading, setLoading] = React.useState(false)\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const formData = new FormData(e.currentTarget)\n    const selectedItem = formData.get(\"item\")\n    // Base UI extracts the 'label' property from objects, so we need to find the corresponding value\n    const itemValue =\n      items.find((item) => item.label === selectedItem)?.value || selectedItem\n    setLoading(true)\n    await new Promise((r) => setTimeout(r, 800))\n    setLoading(false)\n    alert(`Favorite item: ${itemValue || \"\"}`)\n  }\n\n  return (\n    <Form onSubmit={onSubmit} className=\"max-w-64\">\n      <Field>\n        <FieldLabel>Favorite item</FieldLabel>\n        <Autocomplete items={items} name=\"item\" disabled={loading} required>\n          <AutocompleteInput placeholder=\"Search itemsâ€¦\" />\n          <AutocompletePopup>\n            <AutocompleteEmpty>No items found.</AutocompleteEmpty>\n            <AutocompleteList>\n              {(item) => (\n                <AutocompleteItem key={item.value} value={item}>\n                  {item.label}\n                </AutocompleteItem>\n              )}\n            </AutocompleteList>\n          </AutocompletePopup>\n        </Autocomplete>\n        <FieldError>Please select a item.</FieldError>\n      </Field>\n      <Button type=\"submit\" disabled={loading}>\n        Submit\n      </Button>\n    </Form>\n  )\n}\n",
      "type": "registry:example"
    }
  ],
  "categories": [
    "autocomplete",
    "input",
    "form"
  ]
}