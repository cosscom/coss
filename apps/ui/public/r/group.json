{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "group",
  "type": "registry:ui",
  "dependencies": [
    "@base-ui-components/react"
  ],
  "registryDependencies": [
    "@coss/separator"
  ],
  "files": [
    {
      "path": "registry/default/ui/group.tsx",
      "content": "import * as React from \"react\"\nimport { mergeProps } from \"@base-ui-components/react/merge-props\"\nimport { useRender } from \"@base-ui-components/react/use-render\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Separator } from \"@/registry/default/ui/separator\"\n\nconst groupVariants = cva(\n  \"group flex w-fit [--clip-end:-1rem] [--clip-start:-1rem] *:pointer-coarse:after:min-w-auto [&>*]:focus-visible:z-10\",\n  {\n    variants: {\n      orientation: {\n        horizontal:\n          \"[&>*:not(:first-child)]:rounded-l-none [&>*:not(:first-child)]:border-l-0 [&>*:not(:last-child)]:rounded-r-none\",\n        vertical:\n          \"flex-col [&>*:not(:first-child)]:rounded-t-none [&>*:not(:first-child)]:border-t-0 [&>*:not(:last-child)]:rounded-b-none\",\n      },\n    },\n    defaultVariants: {\n      orientation: \"horizontal\",\n    },\n  }\n)\n\nfunction Group({\n  className,\n  orientation,\n  children,\n  ...props\n}: {\n  className?: string\n  orientation?: VariantProps<typeof groupVariants>[\"orientation\"]\n  children: React.ReactNode\n} & React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"group\"\n      data-orientation={orientation}\n      className={cn(groupVariants({ orientation }), className)}\n      role=\"group\"\n      {...props}\n    >\n      {children}\n    </div>\n  )\n}\n\nfunction GroupItem({\n  className,\n  render,\n  ...props\n}: useRender.ComponentProps<\"div\">) {\n  const defaultProps = {\n    className: cn(\n      \"border-x-0 group-data-[orientation=vertical]:border-x group-data-[orientation=vertical]:border-t-0 group-data-[orientation=vertical]:border-b-0 before:[clip-path:inset(-1rem_var(--clip-end)_-1rem_var(--clip-start))] not-first:before:-start-0.5 not-first:before:rounded-s-none not-first:before:[--clip-start:2px] not-last:before:-end-0.5 not-last:before:rounded-e-none not-last:before:[--clip-end:2px] group-data-[orientation=vertical]:not-first:before:-top-0.5 group-data-[orientation=vertical]:not-first:before:rounded-t-none group-data-[orientation=vertical]:not-last:before:-bottom-0.5 group-data-[orientation=vertical]:not-last:before:rounded-b-none first:border-s group-data-[orientation=vertical]:first:border-t last:border-e group-data-[orientation=vertical]:last:border-b focus-visible:z-10 has-focus-visible:z-10 not-last:has-[+[data-slot=separator]]:before:[--clip-end:1.5px] [[data-slot=separator]+&]:before:[--clip-start:1.5px]\",\n      className\n    ),\n  }\n  return useRender({\n    defaultTagName: \"div\",\n    render,\n    props: mergeProps(defaultProps, props),\n  })\n}\n\nfunction GroupSeparator({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: {\n  className?: string\n} & React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      orientation={orientation}\n      className={cn(\n        \"relative z-20 has-[+[data-slot=input-control]:focus-within,+[data-slot=field-control]:focus-within,+[data-slot=select-trigger]:focus-visible+*]:translate-x-px has-[+[data-slot=input-control]:focus-within,+[data-slot=field-control]:focus-within,+[data-slot=select-trigger]:focus-visible+*]:bg-ring [[data-slot=input-control]:focus-within+&,[data-slot=field-control]:focus-within+&,[data-slot=select-trigger]:focus-visible+*+&]:-translate-x-px [[data-slot=input-control]:focus-within+&,[data-slot=field-control]:focus-within+&,[data-slot=select-trigger]:focus-visible+*+&]:bg-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Group, GroupItem, GroupSeparator, groupVariants }\n",
      "type": "registry:ui"
    }
  ]
}