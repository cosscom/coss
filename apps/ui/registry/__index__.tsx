/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "accordion": {
    name: "accordion",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/accordion.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/accordion.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "alert": {
    name: "alert",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/alert.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/alert.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "alert-dialog": {
    name: "alert-dialog",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/alert-dialog.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/alert-dialog.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "autocomplete": {
    name: "autocomplete",
    description: "",
    type: "registry:ui",
    registryDependencies: ["@coss/input","@coss/scroll-area"],
    files: [{
      path: "registry/default/ui/autocomplete.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/autocomplete.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "avatar": {
    name: "avatar",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/avatar.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/avatar.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "badge": {
    name: "badge",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/badge.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "breadcrumb": {
    name: "breadcrumb",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/breadcrumb.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/breadcrumb.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "button": {
    name: "button",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/button.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/button.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "card": {
    name: "card",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/card.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/card.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "checkbox": {
    name: "checkbox",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/checkbox.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/checkbox.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "checkbox-group": {
    name: "checkbox-group",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/checkbox-group.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/checkbox-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "collapsible": {
    name: "collapsible",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/collapsible.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/collapsible.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "combobox": {
    name: "combobox",
    description: "",
    type: "registry:ui",
    registryDependencies: ["@coss/input","@coss/scroll-area"],
    files: [{
      path: "registry/default/ui/combobox.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/combobox.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "dialog": {
    name: "dialog",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/dialog.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/dialog.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "field": {
    name: "field",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/field.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/field.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "fieldset": {
    name: "fieldset",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/fieldset.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/fieldset.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "form": {
    name: "form",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/form.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "frame": {
    name: "frame",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/frame.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/frame.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "group": {
    name: "group",
    description: "",
    type: "registry:ui",
    registryDependencies: ["@coss/separator"],
    files: [{
      path: "registry/default/ui/group.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "input": {
    name: "input",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/input.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/input.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "label": {
    name: "label",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/label.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "menu": {
    name: "menu",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/menu.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/menu.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "meter": {
    name: "meter",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/meter.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/meter.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "number-field": {
    name: "number-field",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/number-field.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/number-field.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "pagination": {
    name: "pagination",
    description: "",
    type: "registry:ui",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/ui/pagination.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/pagination.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "popover": {
    name: "popover",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/popover.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/popover.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "preview-card": {
    name: "preview-card",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/preview-card.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/preview-card.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "progress": {
    name: "progress",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/progress.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/progress.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "radio-group": {
    name: "radio-group",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/radio-group.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/radio-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "scroll-area": {
    name: "scroll-area",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/scroll-area.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/scroll-area.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "select": {
    name: "select",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/select.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/select.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "separator": {
    name: "separator",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/separator.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/separator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "sheet": {
    name: "sheet",
    description: "",
    type: "registry:ui",
    registryDependencies: ["@coss/dialog"],
    files: [{
      path: "registry/default/ui/sheet.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/sheet.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "slider": {
    name: "slider",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/slider.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/slider.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "switch": {
    name: "switch",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/switch.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/switch.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "table": {
    name: "table",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/table.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/table.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "tabs": {
    name: "tabs",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/tabs.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/tabs.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "textarea": {
    name: "textarea",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/textarea.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/textarea.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toast": {
    name: "toast",
    description: "",
    type: "registry:ui",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/ui/toast.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/toast.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle": {
    name: "toggle",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/toggle.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/toggle.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toggle-group": {
    name: "toggle-group",
    description: "",
    type: "registry:ui",
    registryDependencies: ["@coss/separator","@coss/toggle"],
    files: [{
      path: "registry/default/ui/toggle-group.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/toggle-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "toolbar": {
    name: "toolbar",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/toolbar.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/toolbar.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "tooltip": {
    name: "tooltip",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/default/ui/tooltip.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/ui/tooltip.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: undefined,
    meta: undefined,
  },
  "accordion-controlled": {
    name: "accordion-controlled",
    description: "Controlled accordion",
    type: "registry:example",
    registryDependencies: ["@coss/accordion","@coss/button"],
    files: [{
      path: "registry/default/examples/accordion-controlled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/accordion-controlled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["accordion"],
    meta: undefined,
  },
  "accordion-demo": {
    name: "accordion-demo",
    description: "Basic accordion",
    type: "registry:example",
    registryDependencies: ["@coss/accordion"],
    files: [{
      path: "registry/default/examples/accordion-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/accordion-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["accordion"],
    meta: undefined,
  },
  "accordion-multiple": {
    name: "accordion-multiple",
    description: "Accordion allowing multiple panels open",
    type: "registry:example",
    registryDependencies: ["@coss/accordion"],
    files: [{
      path: "registry/default/examples/accordion-multiple.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/accordion-multiple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["accordion"],
    meta: undefined,
  },
  "accordion-single": {
    name: "accordion-single",
    description: "Accordion with one panel open",
    type: "registry:example",
    registryDependencies: ["@coss/accordion"],
    files: [{
      path: "registry/default/examples/accordion-single.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/accordion-single.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["accordion"],
    meta: undefined,
  },
  "alert-demo": {
    name: "alert-demo",
    description: "Basic alert",
    type: "registry:example",
    registryDependencies: ["@coss/alert"],
    files: [{
      path: "registry/default/examples/alert-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/alert-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["alert"],
    meta: undefined,
  },
  "alert-with-icon": {
    name: "alert-with-icon",
    description: "Alert with icon",
    type: "registry:example",
    registryDependencies: ["@coss/alert"],
    files: [{
      path: "registry/default/examples/alert-with-icon.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/alert-with-icon.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["alert"],
    meta: undefined,
  },
  "alert-with-icon-action": {
    name: "alert-with-icon-action",
    description: "Alert with icon and action buttons",
    type: "registry:example",
    registryDependencies: ["@coss/alert","@coss/button"],
    files: [{
      path: "registry/default/examples/alert-with-icon-action.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/alert-with-icon-action.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["alert"],
    meta: undefined,
  },
  "alert-info": {
    name: "alert-info",
    description: "Info alert",
    type: "registry:example",
    registryDependencies: ["@coss/alert"],
    files: [{
      path: "registry/default/examples/alert-info.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/alert-info.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["alert","info"],
    meta: undefined,
  },
  "alert-success": {
    name: "alert-success",
    description: "Success alert",
    type: "registry:example",
    registryDependencies: ["@coss/alert"],
    files: [{
      path: "registry/default/examples/alert-success.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/alert-success.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["alert","success"],
    meta: undefined,
  },
  "alert-warning": {
    name: "alert-warning",
    description: "Warning alert",
    type: "registry:example",
    registryDependencies: ["@coss/alert"],
    files: [{
      path: "registry/default/examples/alert-warning.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/alert-warning.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["alert","warning"],
    meta: undefined,
  },
  "alert-error": {
    name: "alert-error",
    description: "Error alert",
    type: "registry:example",
    registryDependencies: ["@coss/alert"],
    files: [{
      path: "registry/default/examples/alert-error.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/alert-error.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["alert","error"],
    meta: undefined,
  },
  "alert-dialog-demo": {
    name: "alert-dialog-demo",
    description: "Alert dialog",
    type: "registry:example",
    registryDependencies: ["@coss/alert-dialog","@coss/button"],
    files: [{
      path: "registry/default/examples/alert-dialog-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/alert-dialog-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["dialog"],
    meta: undefined,
  },
  "autocomplete-demo": {
    name: "autocomplete-demo",
    description: "Basic autocomplete",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input"],
    meta: undefined,
  },
  "autocomplete-disabled": {
    name: "autocomplete-disabled",
    description: "Disabled autocomplete",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input","disabled"],
    meta: undefined,
  },
  "autocomplete-sm": {
    name: "autocomplete-sm",
    description: "Small autocomplete",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input"],
    meta: undefined,
  },
  "autocomplete-lg": {
    name: "autocomplete-lg",
    description: "Large autocomplete",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input"],
    meta: undefined,
  },
  "autocomplete-with-label": {
    name: "autocomplete-with-label",
    description: "Autocomplete with label",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete","@coss/label"],
    files: [{
      path: "registry/default/examples/autocomplete-with-label.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-with-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input"],
    meta: undefined,
  },
  "autocomplete-inline": {
    name: "autocomplete-inline",
    description: "Autocomplete autofilling the input with the highlighted item",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-inline.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-inline.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input"],
    meta: undefined,
  },
  "autocomplete-autohighlight": {
    name: "autocomplete-autohighlight",
    description: "Autocomplete auto highlighting the first option",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-autohighlight.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-autohighlight.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input"],
    meta: undefined,
  },
  "autocomplete-with-clear": {
    name: "autocomplete-with-clear",
    description: "Autocomplete with clear button",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-with-clear.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-with-clear.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input"],
    meta: undefined,
  },
  "autocomplete-with-trigger-clear": {
    name: "autocomplete-with-trigger-clear",
    description: "Autocomplete with trigger and clear buttons",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-with-trigger-clear.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-with-trigger-clear.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input"],
    meta: undefined,
  },
  "autocomplete-grouped": {
    name: "autocomplete-grouped",
    description: "Autocomplete with grouped items",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-grouped.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-grouped.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input"],
    meta: undefined,
  },
  "autocomplete-limit": {
    name: "autocomplete-limit",
    description: "Autocomplete with limited number of results",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-limit.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-limit.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input"],
    meta: undefined,
  },
  "autocomplete-async": {
    name: "autocomplete-async",
    description: "Autocomplete with async items loading",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/autocomplete-async.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-async.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input","async"],
    meta: undefined,
  },
  "autocomplete-form": {
    name: "autocomplete-form",
    description: "Autocomplete form",
    type: "registry:example",
    registryDependencies: ["@coss/autocomplete","@coss/form","@coss/field"],
    files: [{
      path: "registry/default/examples/autocomplete-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/autocomplete-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["autocomplete","input","form"],
    meta: undefined,
  },
  "avatar-demo": {
    name: "avatar-demo",
    description: "Avatar with image and fallback",
    type: "registry:example",
    registryDependencies: ["@coss/avatar"],
    files: [{
      path: "registry/default/examples/avatar-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/avatar-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["avatar"],
    meta: undefined,
  },
  "avatar-fallback": {
    name: "avatar-fallback",
    description: "Fallback-only avatar",
    type: "registry:example",
    registryDependencies: ["@coss/avatar"],
    files: [{
      path: "registry/default/examples/avatar-fallback.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/avatar-fallback.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["avatar"],
    meta: undefined,
  },
  "avatar-group": {
    name: "avatar-group",
    description: "Overlapping avatar group",
    type: "registry:example",
    registryDependencies: ["@coss/avatar"],
    files: [{
      path: "registry/default/examples/avatar-group.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/avatar-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["avatar","avatar group"],
    meta: undefined,
  },
  "avatar-radius": {
    name: "avatar-radius",
    description: "Avatars with different radii",
    type: "registry:example",
    registryDependencies: ["@coss/avatar"],
    files: [{
      path: "registry/default/examples/avatar-radius.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/avatar-radius.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["avatar"],
    meta: undefined,
  },
  "avatar-size": {
    name: "avatar-size",
    description: "Avatars with different sizes",
    type: "registry:example",
    registryDependencies: ["@coss/avatar"],
    files: [{
      path: "registry/default/examples/avatar-size.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/avatar-size.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["avatar"],
    meta: undefined,
  },
  "badge-demo": {
    name: "badge-demo",
    description: "Basic badge",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge"],
    meta: undefined,
  },
  "badge-outline": {
    name: "badge-outline",
    description: "Outline badge",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-outline.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-outline.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge"],
    meta: undefined,
  },
  "badge-secondary": {
    name: "badge-secondary",
    description: "Secondary badge",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-secondary.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-secondary.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge"],
    meta: undefined,
  },
  "badge-destructive": {
    name: "badge-destructive",
    description: "Destructive badge",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-destructive.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-destructive.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge","destructive","error"],
    meta: undefined,
  },
  "badge-info": {
    name: "badge-info",
    description: "Info badge",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-info.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-info.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge","info"],
    meta: undefined,
  },
  "badge-success": {
    name: "badge-success",
    description: "Success badge",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-success.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-success.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge","success"],
    meta: undefined,
  },
  "badge-warning": {
    name: "badge-warning",
    description: "Warning badge",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-warning.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-warning.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge","warning"],
    meta: undefined,
  },
  "badge-error": {
    name: "badge-error",
    description: "Error badge",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-error.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-error.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge","error"],
    meta: undefined,
  },
  "badge-sm": {
    name: "badge-sm",
    description: "Small badge",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge"],
    meta: undefined,
  },
  "badge-lg": {
    name: "badge-lg",
    description: "Large badge",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge"],
    meta: undefined,
  },
  "badge-with-icon": {
    name: "badge-with-icon",
    description: "Badge with icon",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-with-icon.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-with-icon.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge"],
    meta: undefined,
  },
  "badge-with-link": {
    name: "badge-with-link",
    description: "Badge with link",
    type: "registry:example",
    registryDependencies: ["@coss/badge"],
    files: [{
      path: "registry/default/examples/badge-with-link.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/badge-with-link.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["badge"],
    meta: undefined,
  },
  "breadcrumb-demo": {
    name: "breadcrumb-demo",
    description: "Breadcrumb with menu example",
    type: "registry:example",
    registryDependencies: ["@coss/breadcrumb","@coss/menu"],
    files: [{
      path: "registry/default/examples/breadcrumb-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/breadcrumb-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["breadcrumb","menu"],
    meta: undefined,
  },
  "breadcrumb-custom-separator": {
    name: "breadcrumb-custom-separator",
    description: "Breadcrumb with custom separator",
    type: "registry:example",
    registryDependencies: ["@coss/breadcrumb"],
    files: [{
      path: "registry/default/examples/breadcrumb-custom-separator.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/breadcrumb-custom-separator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["breadcrumb"],
    meta: undefined,
  },
  "button-demo": {
    name: "button-demo",
    description: "Default button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-secondary": {
    name: "button-secondary",
    description: "Secondary button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-secondary.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-secondary.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-destructive": {
    name: "button-destructive",
    description: "Destructive button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-destructive.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-destructive.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button","delete","destructive"],
    meta: undefined,
  },
  "button-destructive-outline": {
    name: "button-destructive-outline",
    description: "Destructive outline button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-destructive-outline.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-destructive-outline.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button","delete"],
    meta: undefined,
  },
  "button-outline": {
    name: "button-outline",
    description: "Outline button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-outline.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-outline.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-ghost": {
    name: "button-ghost",
    description: "Ghost button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-ghost.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-ghost.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-link": {
    name: "button-link",
    description: "Link button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-link.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-link.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-xs": {
    name: "button-xs",
    description: "Extra-small button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-xs.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-xs.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-sm": {
    name: "button-sm",
    description: "Small button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-lg": {
    name: "button-lg",
    description: "Large button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-xl": {
    name: "button-xl",
    description: "Extra-large button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-xl.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-xl.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-disabled": {
    name: "button-disabled",
    description: "Disabled button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button","disabled"],
    meta: undefined,
  },
  "button-icon": {
    name: "button-icon",
    description: "Icon button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-icon.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-icon.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-icon-sm": {
    name: "button-icon-sm",
    description: "Small icon button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-icon-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-icon-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-icon-lg": {
    name: "button-icon-lg",
    description: "Large icon button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-icon-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-icon-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-with-icon": {
    name: "button-with-icon",
    description: "Button with icon",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-with-icon.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-with-icon.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-with-link": {
    name: "button-with-link",
    description: "Link rendered as button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-with-link.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-with-link.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "button-loading": {
    name: "button-loading",
    description: "Loading button",
    type: "registry:example",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/examples/button-loading.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/button-loading.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button","loading"],
    meta: undefined,
  },
  "card-demo": {
    name: "card-demo",
    description: "Card example with form",
    type: "registry:example",
    registryDependencies: ["@coss/card","@coss/button","@coss/select","@coss/form","@coss/field"],
    files: [{
      path: "registry/default/examples/card-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/card-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["card","button","input","select","form","field"],
    meta: undefined,
  },
  "checkbox-card": {
    name: "checkbox-card",
    description: "Card-style checkbox",
    type: "registry:example",
    registryDependencies: ["@coss/checkbox","@coss/label"],
    files: [{
      path: "registry/default/examples/checkbox-card.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/checkbox-card.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["checkbox","card","label"],
    meta: undefined,
  },
  "checkbox-demo": {
    name: "checkbox-demo",
    description: "Basic checkbox",
    type: "registry:example",
    registryDependencies: ["@coss/checkbox","@coss/label"],
    files: [{
      path: "registry/default/examples/checkbox-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/checkbox-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["checkbox","label"],
    meta: undefined,
  },
  "checkbox-disabled": {
    name: "checkbox-disabled",
    description: "Disabled checkbox",
    type: "registry:example",
    registryDependencies: ["@coss/checkbox","@coss/label"],
    files: [{
      path: "registry/default/examples/checkbox-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/checkbox-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["checkbox","disabled","label"],
    meta: undefined,
  },
  "checkbox-form": {
    name: "checkbox-form",
    description: "Checkbox in a form",
    type: "registry:example",
    registryDependencies: ["@coss/checkbox","@coss/field","@coss/form","@coss/button"],
    files: [{
      path: "registry/default/examples/checkbox-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/checkbox-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["checkbox","form","button","label"],
    meta: undefined,
  },
  "checkbox-group-demo": {
    name: "checkbox-group-demo",
    description: "Checkbox group",
    type: "registry:example",
    registryDependencies: ["@coss/checkbox-group","@coss/checkbox","@coss/label"],
    files: [{
      path: "registry/default/examples/checkbox-group-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/checkbox-group-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["checkbox group","checkbox"],
    meta: undefined,
  },
  "checkbox-group-disabled": {
    name: "checkbox-group-disabled",
    description: "Checkbox group with disabled item",
    type: "registry:example",
    registryDependencies: ["@coss/checkbox-group","@coss/checkbox","@coss/label"],
    files: [{
      path: "registry/default/examples/checkbox-group-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/checkbox-group-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["checkbox group","checkbox","disabled"],
    meta: undefined,
  },
  "checkbox-group-form": {
    name: "checkbox-group-form",
    description: "Checkbox group in a form",
    type: "registry:example",
    registryDependencies: ["@coss/checkbox-group","@coss/checkbox","@coss/button","@coss/field","@coss/fieldset","@coss/form"],
    files: [{
      path: "registry/default/examples/checkbox-group-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/checkbox-group-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["checkbox group","checkbox","form","button","field","fieldset"],
    meta: undefined,
  },
  "checkbox-group-nested-parent": {
    name: "checkbox-group-nested-parent",
    description: "Checkbox group parent with nested children controls",
    type: "registry:example",
    registryDependencies: ["@coss/checkbox-group","@coss/checkbox","@coss/label"],
    files: [{
      path: "registry/default/examples/checkbox-group-nested-parent.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/checkbox-group-nested-parent.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["checkbox group","checkbox","label"],
    meta: undefined,
  },
  "checkbox-group-parent": {
    name: "checkbox-group-parent",
    description: "Checkbox group select/deselect all checkboxes",
    type: "registry:example",
    registryDependencies: ["@coss/checkbox-group","@coss/checkbox","@coss/label"],
    files: [{
      path: "registry/default/examples/checkbox-group-parent.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/checkbox-group-parent.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["checkbox group","checkbox","label"],
    meta: undefined,
  },
  "checkbox-with-description": {
    name: "checkbox-with-description",
    description: "Checkbox with helper text",
    type: "registry:example",
    registryDependencies: ["@coss/checkbox","@coss/label"],
    files: [{
      path: "registry/default/examples/checkbox-with-description.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/checkbox-with-description.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["checkbox","label","helper","hint"],
    meta: undefined,
  },
  "collapsible-demo": {
    name: "collapsible-demo",
    description: "Basic collapsible",
    type: "registry:example",
    registryDependencies: ["@coss/collapsible"],
    files: [{
      path: "registry/default/examples/collapsible-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/collapsible-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["collapsible"],
    meta: undefined,
  },
  "combobox-demo": {
    name: "combobox-demo",
    description: "Basic combobox",
    type: "registry:example",
    registryDependencies: ["@coss/combobox"],
    files: [{
      path: "registry/default/examples/combobox-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input"],
    meta: undefined,
  },
  "combobox-disabled": {
    name: "combobox-disabled",
    description: "Disabled combobox",
    type: "registry:example",
    registryDependencies: ["@coss/combobox"],
    files: [{
      path: "registry/default/examples/combobox-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input","disabled"],
    meta: undefined,
  },
  "combobox-sm": {
    name: "combobox-sm",
    description: "Small combobox",
    type: "registry:example",
    registryDependencies: ["@coss/combobox"],
    files: [{
      path: "registry/default/examples/combobox-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input"],
    meta: undefined,
  },
  "combobox-lg": {
    name: "combobox-lg",
    description: "Large combobox",
    type: "registry:example",
    registryDependencies: ["@coss/combobox"],
    files: [{
      path: "registry/default/examples/combobox-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input"],
    meta: undefined,
  },
  "combobox-with-label": {
    name: "combobox-with-label",
    description: "Combobox with label",
    type: "registry:example",
    registryDependencies: ["@coss/combobox","@coss/label"],
    files: [{
      path: "registry/default/examples/combobox-with-label.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-with-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input"],
    meta: undefined,
  },
  "combobox-autohighlight": {
    name: "combobox-autohighlight",
    description: "Combobox auto highlighting the first option",
    type: "registry:example",
    registryDependencies: ["@coss/combobox"],
    files: [{
      path: "registry/default/examples/combobox-autohighlight.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-autohighlight.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input"],
    meta: undefined,
  },
  "combobox-grouped": {
    name: "combobox-grouped",
    description: "Combobox with grouped items",
    type: "registry:example",
    registryDependencies: ["@coss/combobox"],
    files: [{
      path: "registry/default/examples/combobox-grouped.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-grouped.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input"],
    meta: undefined,
  },
  "combobox-with-clear": {
    name: "combobox-with-clear",
    description: "Combobox with clear button",
    type: "registry:example",
    registryDependencies: ["@coss/combobox"],
    files: [{
      path: "registry/default/examples/combobox-with-clear.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-with-clear.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input"],
    meta: undefined,
  },
  "combobox-multiple": {
    name: "combobox-multiple",
    description: "Combobox with multiple selection",
    type: "registry:example",
    registryDependencies: ["@coss/combobox"],
    files: [{
      path: "registry/default/examples/combobox-multiple.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-multiple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input"],
    meta: undefined,
  },
  "combobox-with-inner-input": {
    name: "combobox-with-inner-input",
    description: "Combobox with popup",
    type: "registry:example",
    registryDependencies: ["@coss/combobox","@coss/button"],
    files: [{
      path: "registry/default/examples/combobox-with-inner-input.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-with-inner-input.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input"],
    meta: undefined,
  },
  "combobox-form": {
    name: "combobox-form",
    description: "Combobox form",
    type: "registry:example",
    registryDependencies: ["@coss/combobox","@coss/button","@coss/form","@coss/field"],
    files: [{
      path: "registry/default/examples/combobox-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input","form"],
    meta: undefined,
  },
  "combobox-multiple-form": {
    name: "combobox-multiple-form",
    description: "Combobox multiple selection form",
    type: "registry:example",
    registryDependencies: ["@coss/combobox","@coss/button","@coss/form","@coss/field"],
    files: [{
      path: "registry/default/examples/combobox-multiple-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/combobox-multiple-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["combobox","input","form","multiple"],
    meta: undefined,
  },
  "dialog-close-confirmation": {
    name: "dialog-close-confirmation",
    description: "Prompt before closing with unsaved changes",
    type: "registry:example",
    registryDependencies: ["@coss/alert-dialog","@coss/dialog","@coss/button","@coss/form","@coss/field","@coss/textarea"],
    files: [{
      path: "registry/default/examples/dialog-close-confirmation.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/dialog-close-confirmation.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["dialog","alert dialog","form","field","button","textarea"],
    meta: undefined,
  },
  "dialog-demo": {
    name: "dialog-demo",
    description: "Basic dialog",
    type: "registry:example",
    registryDependencies: ["@coss/dialog","@coss/button","@coss/form","@coss/field"],
    files: [{
      path: "registry/default/examples/dialog-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/dialog-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["dialog","form","field","button"],
    meta: undefined,
  },
  "dialog-from-menu": {
    name: "dialog-from-menu",
    description: "Open dialog from a menu item",
    type: "registry:example",
    registryDependencies: ["@coss/dialog","@coss/menu","@coss/button"],
    files: [{
      path: "registry/default/examples/dialog-from-menu.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/dialog-from-menu.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["dialog","menu","button"],
    meta: undefined,
  },
  "dialog-nested": {
    name: "dialog-nested",
    description: "Dialog with a nested dialog",
    type: "registry:example",
    registryDependencies: ["@coss/dialog","@coss/button","@coss/field"],
    files: [{
      path: "registry/default/examples/dialog-nested.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/dialog-nested.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["dialog","field","button"],
    meta: undefined,
  },
  "sheet-demo": {
    name: "sheet-demo",
    description: "Basic sheet",
    type: "registry:example",
    registryDependencies: ["@coss/sheet","@coss/button","@coss/form","@coss/field"],
    files: [{
      path: "registry/default/examples/sheet-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/sheet-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["sheet","dialog"],
    meta: undefined,
  },
  "sheet-position": {
    name: "sheet-position",
    description: "Sheet position",
    type: "registry:example",
    registryDependencies: ["@coss/sheet","@coss/button"],
    files: [{
      path: "registry/default/examples/sheet-position.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/sheet-position.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["sheet"],
    meta: undefined,
  },
  "field-checkbox": {
    name: "field-checkbox",
    description: "Field with checkbox",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/checkbox"],
    files: [{
      path: "registry/default/examples/field-checkbox.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-checkbox.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","label","checkbox"],
    meta: undefined,
  },
  "field-checkbox-group": {
    name: "field-checkbox-group",
    description: "Field with checkbox group",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/checkbox-group","@coss/checkbox","@coss/fieldset"],
    files: [{
      path: "registry/default/examples/field-checkbox-group.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-checkbox-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","checkbox group","checkbox","fieldset","label"],
    meta: undefined,
  },
  "field-complete-form": {
    name: "field-complete-form",
    description: "Complete form built with field",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/select","@coss/checkbox","@coss/form","@coss/button"],
    files: [{
      path: "registry/default/examples/field-complete-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-complete-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","label","form","select","checkbox","button","helper","hint"],
    meta: undefined,
  },
  "field-demo": {
    name: "field-demo",
    description: "Field with description",
    type: "registry:example",
    registryDependencies: ["@coss/field"],
    files: [{
      path: "registry/default/examples/field-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","label","helper","hint"],
    meta: undefined,
  },
  "field-disabled": {
    name: "field-disabled",
    description: "Field in disabled state",
    type: "registry:example",
    registryDependencies: ["@coss/field"],
    files: [{
      path: "registry/default/examples/field-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","label","disabled","helper","hint"],
    meta: undefined,
  },
  "field-error": {
    name: "field-error",
    description: "Field showing validation error",
    type: "registry:example",
    registryDependencies: ["@coss/field"],
    files: [{
      path: "registry/default/examples/field-error.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-error.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","label","error"],
    meta: undefined,
  },
  "field-autocomplete": {
    name: "field-autocomplete",
    description: "Field with autocomplete",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/autocomplete"],
    files: [{
      path: "registry/default/examples/field-autocomplete.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-autocomplete.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","input","autocomplete","label"],
    meta: undefined,
  },
  "field-combobox": {
    name: "field-combobox",
    description: "Field with combobox",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/combobox"],
    files: [{
      path: "registry/default/examples/field-combobox.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-combobox.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","input","combobox","label"],
    meta: undefined,
  },
  "field-combobox-multiple": {
    name: "field-combobox-multiple",
    description: "Field with multiple selection combobox",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/combobox"],
    files: [{
      path: "registry/default/examples/field-combobox-multiple.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-combobox-multiple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","input","combobox","label","multiple"],
    meta: undefined,
  },
  "field-number-field": {
    name: "field-number-field",
    description: "Field with number field",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/number-field"],
    files: [{
      path: "registry/default/examples/field-number-field.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-number-field.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","input","label","number","helper","hint"],
    meta: undefined,
  },
  "field-radio": {
    name: "field-radio",
    description: "Field with radio group",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/radio-group","@coss/fieldset"],
    files: [{
      path: "registry/default/examples/field-radio.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-radio.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","radio","label","fieldset","helper","hint"],
    meta: undefined,
  },
  "field-required": {
    name: "field-required",
    description: "Field with required indicator",
    type: "registry:example",
    registryDependencies: ["@coss/field"],
    files: [{
      path: "registry/default/examples/field-required.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-required.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","label","required"],
    meta: undefined,
  },
  "field-select": {
    name: "field-select",
    description: "Field with select",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/select"],
    files: [{
      path: "registry/default/examples/field-select.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-select.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","select","label","helper","hint"],
    meta: undefined,
  },
  "field-slider": {
    name: "field-slider",
    description: "Field with slider",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/slider"],
    files: [{
      path: "registry/default/examples/field-slider.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-slider.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","slider","label","helper","hint"],
    meta: undefined,
  },
  "field-switch": {
    name: "field-switch",
    description: "Field with toggle switch",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/switch"],
    files: [{
      path: "registry/default/examples/field-switch.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-switch.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","switch","label"],
    meta: undefined,
  },
  "field-textarea": {
    name: "field-textarea",
    description: "Field with textarea",
    type: "registry:example",
    registryDependencies: ["@coss/field","@coss/textarea"],
    files: [{
      path: "registry/default/examples/field-textarea.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-textarea.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field","textarea","label","helper","hint"],
    meta: undefined,
  },
  "field-validity": {
    name: "field-validity",
    description: "Show field validity state",
    type: "registry:example",
    registryDependencies: ["@coss/field"],
    files: [{
      path: "registry/default/examples/field-validity.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/field-validity.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["field"],
    meta: undefined,
  },
  "fieldset-demo": {
    name: "fieldset-demo",
    description: "Fieldset with legend and labeled fields",
    type: "registry:example",
    registryDependencies: ["@coss/fieldset","@coss/field"],
    files: [{
      path: "registry/default/examples/fieldset-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/fieldset-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["fieldset","field","label","input","helper"],
    meta: undefined,
  },
  "form-demo": {
    name: "form-demo",
    description: "Input in a form",
    type: "registry:example",
    registryDependencies: ["@coss/form","@coss/field","@coss/button"],
    files: [{
      path: "registry/default/examples/form-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/form-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["form","field","button","input"],
    meta: undefined,
  },
  "form-zod": {
    name: "form-zod",
    description: "Form with zod validation",
    type: "registry:example",
    registryDependencies: ["@coss/form","@coss/field","@coss/button"],
    files: [{
      path: "registry/default/examples/form-zod.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/form-zod.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["form","field","button","validation","label","zod"],
    meta: undefined,
  },
  "input-demo": {
    name: "input-demo",
    description: "Basic input component without label",
    type: "registry:example",
    registryDependencies: ["@coss/input"],
    files: [{
      path: "registry/default/examples/input-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/input-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["input"],
    meta: undefined,
  },
  "frame-demo": {
    name: "frame-demo",
    description: "Frame example",
    type: "registry:example",
    registryDependencies: ["@coss/frame"],
    files: [{
      path: "registry/default/examples/frame-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/frame-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["frame"],
    meta: undefined,
  },
  "group-demo": {
    name: "group-demo",
    description: "Group example",
    type: "registry:example",
    registryDependencies: ["@coss/group","@coss/button"],
    files: [{
      path: "registry/default/examples/group-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/group-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["group"],
    meta: undefined,
  },
  "group-with-input": {
    name: "group-with-input",
    description: "Group with input",
    type: "registry:example",
    registryDependencies: ["@coss/group","@coss/button","@coss/input"],
    files: [{
      path: "registry/default/examples/group-with-input.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/group-with-input.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["group"],
    meta: undefined,
  },
  "input-sm": {
    name: "input-sm",
    description: "Small input",
    type: "registry:example",
    registryDependencies: ["@coss/input"],
    files: [{
      path: "registry/default/examples/input-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/input-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["input"],
    meta: undefined,
  },
  "input-lg": {
    name: "input-lg",
    description: "Large input",
    type: "registry:example",
    registryDependencies: ["@coss/input"],
    files: [{
      path: "registry/default/examples/input-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/input-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["input"],
    meta: undefined,
  },
  "input-disabled": {
    name: "input-disabled",
    description: "Input with disabled state",
    type: "registry:example",
    registryDependencies: ["@coss/input"],
    files: [{
      path: "registry/default/examples/input-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/input-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["input","disabled"],
    meta: undefined,
  },
  "input-file": {
    name: "input-file",
    description: "Input type set to file",
    type: "registry:example",
    registryDependencies: ["@coss/input"],
    files: [{
      path: "registry/default/examples/input-file.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/input-file.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["input","file"],
    meta: undefined,
  },
  "input-with-label": {
    name: "input-with-label",
    description: "Input with label",
    type: "registry:example",
    registryDependencies: ["@coss/input","@coss/label"],
    files: [{
      path: "registry/default/examples/input-with-label.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/input-with-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["input","label"],
    meta: undefined,
  },
  "input-with-button": {
    name: "input-with-button",
    description: "Input with button",
    type: "registry:example",
    registryDependencies: ["@coss/input","@coss/button"],
    files: [{
      path: "registry/default/examples/input-with-button.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/input-with-button.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["input","button"],
    meta: undefined,
  },
  "menu-checkbox": {
    name: "menu-checkbox",
    description: "Menu with checkbox items",
    type: "registry:example",
    registryDependencies: ["@coss/menu","@coss/button"],
    files: [{
      path: "registry/default/examples/menu-checkbox.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/menu-checkbox.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["menu","checkbox"],
    meta: undefined,
  },
  "menu-close-on-click": {
    name: "menu-close-on-click",
    description: "Close menu when items are clicked",
    type: "registry:example",
    registryDependencies: ["@coss/menu","@coss/button"],
    files: [{
      path: "registry/default/examples/menu-close-on-click.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/menu-close-on-click.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["menu"],
    meta: undefined,
  },
  "menu-demo": {
    name: "menu-demo",
    description: "Basic menu",
    type: "registry:example",
    registryDependencies: ["@coss/menu","@coss/button"],
    files: [{
      path: "registry/default/examples/menu-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/menu-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["menu"],
    meta: undefined,
  },
  "menu-group-labels": {
    name: "menu-group-labels",
    description: "Menu items grouped with labels",
    type: "registry:example",
    registryDependencies: ["@coss/menu","@coss/button"],
    files: [{
      path: "registry/default/examples/menu-group-labels.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/menu-group-labels.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["menu","label"],
    meta: undefined,
  },
  "menu-hover": {
    name: "menu-hover",
    description: "Open the menu on hover",
    type: "registry:example",
    registryDependencies: ["@coss/menu","@coss/button"],
    files: [{
      path: "registry/default/examples/menu-hover.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/menu-hover.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["menu"],
    meta: undefined,
  },
  "menu-link": {
    name: "menu-link",
    description: "Menu items as links",
    type: "registry:example",
    registryDependencies: ["@coss/menu","@coss/button"],
    files: [{
      path: "registry/default/examples/menu-link.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/menu-link.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["menu","link"],
    meta: undefined,
  },
  "menu-nested": {
    name: "menu-nested",
    description: "Menu with submenu",
    type: "registry:example",
    registryDependencies: ["@coss/menu","@coss/button"],
    files: [{
      path: "registry/default/examples/menu-nested.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/menu-nested.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["menu"],
    meta: undefined,
  },
  "menu-radio-group": {
    name: "menu-radio-group",
    description: "Menu with radio options",
    type: "registry:example",
    registryDependencies: ["@coss/menu","@coss/button"],
    files: [{
      path: "registry/default/examples/menu-radio-group.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/menu-radio-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["menu","radio"],
    meta: undefined,
  },
  "meter-demo": {
    name: "meter-demo",
    description: "Basic meter",
    type: "registry:example",
    registryDependencies: ["@coss/meter"],
    files: [{
      path: "registry/default/examples/meter-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/meter-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["meter"],
    meta: undefined,
  },
  "meter-simple": {
    name: "meter-simple",
    description: "Meter without label and value",
    type: "registry:example",
    registryDependencies: ["@coss/meter"],
    files: [{
      path: "registry/default/examples/meter-simple.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/meter-simple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["meter"],
    meta: undefined,
  },
  "meter-with-formatted-value": {
    name: "meter-with-formatted-value",
    description: "Meter with a custom formatted value",
    type: "registry:example",
    registryDependencies: ["@coss/meter"],
    files: [{
      path: "registry/default/examples/meter-with-formatted-value.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/meter-with-formatted-value.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["meter"],
    meta: undefined,
  },
  "meter-with-range": {
    name: "meter-with-range",
    description: "Meter with min and max values",
    type: "registry:example",
    registryDependencies: ["@coss/meter"],
    files: [{
      path: "registry/default/examples/meter-with-range.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/meter-with-range.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["meter"],
    meta: undefined,
  },
  "number-field-demo": {
    name: "number-field-demo",
    description: "A number field",
    type: "registry:example",
    registryDependencies: ["@coss/number-field"],
    files: [{
      path: "registry/default/examples/number-field-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/number-field-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["number field"],
    meta: undefined,
  },
  "number-field-sm": {
    name: "number-field-sm",
    description: "Small number field",
    type: "registry:example",
    registryDependencies: ["@coss/number-field"],
    files: [{
      path: "registry/default/examples/number-field-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/number-field-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["number field"],
    meta: undefined,
  },
  "number-field-lg": {
    name: "number-field-lg",
    description: "Large number field",
    type: "registry:example",
    registryDependencies: ["@coss/number-field"],
    files: [{
      path: "registry/default/examples/number-field-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/number-field-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["number field"],
    meta: undefined,
  },
  "number-field-disabled": {
    name: "number-field-disabled",
    description: "A disabled number field",
    type: "registry:example",
    registryDependencies: ["@coss/number-field"],
    files: [{
      path: "registry/default/examples/number-field-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/number-field-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["number field","disabled","label"],
    meta: undefined,
  },
  "number-field-form": {
    name: "number-field-form",
    description: "A number in a form",
    type: "registry:example",
    registryDependencies: ["@coss/number-field","@coss/field","@coss/form","@coss/button"],
    files: [{
      path: "registry/default/examples/number-field-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/number-field-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["number field","field","form","button"],
    meta: undefined,
  },
  "number-field-with-formatted-value": {
    name: "number-field-with-formatted-value",
    description: "A number field with formatted value",
    type: "registry:example",
    registryDependencies: ["@coss/number-field"],
    files: [{
      path: "registry/default/examples/number-field-with-formatted-value.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/number-field-with-formatted-value.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["number field"],
    meta: undefined,
  },
  "number-field-with-label": {
    name: "number-field-with-label",
    description: "A number field with an external label",
    type: "registry:example",
    registryDependencies: ["@coss/number-field","@coss/label"],
    files: [{
      path: "registry/default/examples/number-field-with-label.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/number-field-with-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["number field","label"],
    meta: undefined,
  },
  "number-field-with-range": {
    name: "number-field-with-range",
    description: "A number field with min/max constraints",
    type: "registry:example",
    registryDependencies: ["@coss/number-field"],
    files: [{
      path: "registry/default/examples/number-field-with-range.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/number-field-with-range.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["number field","range"],
    meta: undefined,
  },
  "number-field-with-scrub": {
    name: "number-field-with-scrub",
    description: "A number field with a scrub area",
    type: "registry:example",
    registryDependencies: ["@coss/number-field"],
    files: [{
      path: "registry/default/examples/number-field-with-scrub.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/number-field-with-scrub.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["number field"],
    meta: undefined,
  },
  "number-field-with-step": {
    name: "number-field-with-step",
    description: "A number field with step",
    type: "registry:example",
    registryDependencies: ["@coss/number-field"],
    files: [{
      path: "registry/default/examples/number-field-with-step.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/number-field-with-step.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["number field"],
    meta: undefined,
  },
  "pagination-demo": {
    name: "pagination-demo",
    description: "Pagination example",
    type: "registry:example",
    registryDependencies: ["@coss/pagination"],
    files: [{
      path: "registry/default/examples/pagination-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/pagination-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["pagination"],
    meta: undefined,
  },
  "popover-demo": {
    name: "popover-demo",
    description: "Popover with a form",
    type: "registry:example",
    registryDependencies: ["@coss/popover","@coss/button","@coss/textarea","@coss/form","@coss/field"],
    files: [{
      path: "registry/default/examples/popover-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/popover-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["popover","button","textarea","form","field"],
    meta: undefined,
  },
  "popover-with-close": {
    name: "popover-with-close",
    description: "Popover with close button",
    type: "registry:example",
    registryDependencies: ["@coss/popover","@coss/button"],
    files: [{
      path: "registry/default/examples/popover-with-close.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/popover-with-close.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["popover","button"],
    meta: undefined,
  },
  "preview-card-demo": {
    name: "preview-card-demo",
    description: "Preview card example",
    type: "registry:example",
    registryDependencies: ["@coss/preview-card","@coss/button"],
    files: [{
      path: "registry/default/examples/preview-card-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/preview-card-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["preview card","button"],
    meta: undefined,
  },
  "progress-demo": {
    name: "progress-demo",
    description: "Animated progress bar",
    type: "registry:example",
    registryDependencies: ["@coss/progress"],
    files: [{
      path: "registry/default/examples/progress-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/progress-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["progress"],
    meta: undefined,
  },
  "progress-with-formatted-value": {
    name: "progress-with-formatted-value",
    description: "Progress with a custom formatted value",
    type: "registry:example",
    registryDependencies: ["@coss/progress"],
    files: [{
      path: "registry/default/examples/progress-with-formatted-value.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/progress-with-formatted-value.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["progress"],
    meta: undefined,
  },
  "progress-with-label-value": {
    name: "progress-with-label-value",
    description: "Progress with label and value",
    type: "registry:example",
    registryDependencies: ["@coss/progress"],
    files: [{
      path: "registry/default/examples/progress-with-label-value.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/progress-with-label-value.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["progress","label"],
    meta: undefined,
  },
  "radio-group-card": {
    name: "radio-group-card",
    description: "Card-style radio options",
    type: "registry:example",
    registryDependencies: ["@coss/radio-group","@coss/label"],
    files: [{
      path: "registry/default/examples/radio-group-card.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/radio-group-card.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["radio","label"],
    meta: undefined,
  },
  "radio-group-demo": {
    name: "radio-group-demo",
    description: "Basic radio group",
    type: "registry:example",
    registryDependencies: ["@coss/radio-group","@coss/label"],
    files: [{
      path: "registry/default/examples/radio-group-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/radio-group-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["radio","label"],
    meta: undefined,
  },
  "radio-group-disabled": {
    name: "radio-group-disabled",
    description: "Radio group with one option disabled",
    type: "registry:example",
    registryDependencies: ["@coss/radio-group","@coss/label"],
    files: [{
      path: "registry/default/examples/radio-group-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/radio-group-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["radio","label"],
    meta: undefined,
  },
  "radio-group-form": {
    name: "radio-group-form",
    description: "Radio group in a form",
    type: "registry:example",
    registryDependencies: ["@coss/radio-group","@coss/field","@coss/fieldset","@coss/form","@coss/button"],
    files: [{
      path: "registry/default/examples/radio-group-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/radio-group-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["radio","field","fieldset","form","button"],
    meta: undefined,
  },
  "radio-group-with-description": {
    name: "radio-group-with-description",
    description: "Radio options with helper text",
    type: "registry:example",
    registryDependencies: ["@coss/radio-group","@coss/label"],
    files: [{
      path: "registry/default/examples/radio-group-with-description.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/radio-group-with-description.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["radio","label","helper","hint"],
    meta: undefined,
  },
  "scroll-area-demo": {
    name: "scroll-area-demo",
    description: "Scroll area - vertical",
    type: "registry:example",
    registryDependencies: ["@coss/scroll-area"],
    files: [{
      path: "registry/default/examples/scroll-area-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/scroll-area-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["scroll area"],
    meta: undefined,
  },
  "scroll-area-horizontal": {
    name: "scroll-area-horizontal",
    description: "Scroll area - horizontal",
    type: "registry:example",
    registryDependencies: ["@coss/scroll-area"],
    files: [{
      path: "registry/default/examples/scroll-area-horizontal.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/scroll-area-horizontal.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["scroll area"],
    meta: undefined,
  },
  "scroll-area-both": {
    name: "scroll-area-both",
    description: "Scroll area - both horizontal and vertical",
    type: "registry:example",
    registryDependencies: ["@coss/scroll-area"],
    files: [{
      path: "registry/default/examples/scroll-area-both.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/scroll-area-both.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["scroll area"],
    meta: undefined,
  },
  "select-demo": {
    name: "select-demo",
    description: "A basic select",
    type: "registry:example",
    registryDependencies: ["@coss/select"],
    files: [{
      path: "registry/default/examples/select-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/select-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["select"],
    meta: undefined,
  },
  "select-sm": {
    name: "select-sm",
    description: "A select with small size",
    type: "registry:example",
    registryDependencies: ["@coss/select"],
    files: [{
      path: "registry/default/examples/select-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/select-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["select"],
    meta: undefined,
  },
  "select-lg": {
    name: "select-lg",
    description: "A select with large size",
    type: "registry:example",
    registryDependencies: ["@coss/select"],
    files: [{
      path: "registry/default/examples/select-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/select-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["select"],
    meta: undefined,
  },
  "select-disabled": {
    name: "select-disabled",
    description: "A disabled select",
    type: "registry:example",
    registryDependencies: ["@coss/select"],
    files: [{
      path: "registry/default/examples/select-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/select-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["select","disabled"],
    meta: undefined,
  },
  "select-without-alignment": {
    name: "select-without-alignment",
    description: "Select popup not aligned to trigger",
    type: "registry:example",
    registryDependencies: ["@coss/select"],
    files: [{
      path: "registry/default/examples/select-without-alignment.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/select-without-alignment.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["select"],
    meta: undefined,
  },
  "select-with-groups": {
    name: "select-with-groups",
    description: "Select items grouped with labels",
    type: "registry:example",
    registryDependencies: ["@coss/select"],
    files: [{
      path: "registry/default/examples/select-with-groups.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/select-with-groups.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["select"],
    meta: undefined,
  },
  "select-multiple": {
    name: "select-multiple",
    description: "Multiple selection with formatted value",
    type: "registry:example",
    registryDependencies: ["@coss/select"],
    files: [{
      path: "registry/default/examples/select-multiple.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/select-multiple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["select"],
    meta: undefined,
  },
  "select-form": {
    name: "select-form",
    description: "Select in a form",
    type: "registry:example",
    registryDependencies: ["@coss/button","@coss/select","@coss/form","@coss/field"],
    files: [{
      path: "registry/default/examples/select-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/select-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["select","form","field","helper","hint"],
    meta: undefined,
  },
  "separator-demo": {
    name: "separator-demo",
    description: "Separator with horizontal and vertical orientations",
    type: "registry:example",
    registryDependencies: ["@coss/separator"],
    files: [{
      path: "registry/default/examples/separator-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/separator-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["separator"],
    meta: undefined,
  },
  "slider-demo": {
    name: "slider-demo",
    description: "Basic slider",
    type: "registry:example",
    registryDependencies: ["@coss/slider"],
    files: [{
      path: "registry/default/examples/slider-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/slider-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["slider"],
    meta: undefined,
  },
  "slider-with-label-value": {
    name: "slider-with-label-value",
    description: "Slider with label and value",
    type: "registry:example",
    registryDependencies: ["@coss/slider","@coss/label"],
    files: [{
      path: "registry/default/examples/slider-with-label-value.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/slider-with-label-value.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["slider","label"],
    meta: undefined,
  },
  "slider-range": {
    name: "slider-range",
    description: "Two-thumb range slider",
    type: "registry:example",
    registryDependencies: ["@coss/slider"],
    files: [{
      path: "registry/default/examples/slider-range.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/slider-range.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["slider","range slider"],
    meta: undefined,
  },
  "slider-vertical": {
    name: "slider-vertical",
    description: "Vertical slider",
    type: "registry:example",
    registryDependencies: ["@coss/slider"],
    files: [{
      path: "registry/default/examples/slider-vertical.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/slider-vertical.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["slider","vertical slider"],
    meta: undefined,
  },
  "slider-form": {
    name: "slider-form",
    description: "Slider in a form",
    type: "registry:example",
    registryDependencies: ["@coss/slider","@coss/form","@coss/field","@coss/button"],
    files: [{
      path: "registry/default/examples/slider-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/slider-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["slider","form","field","button","helper","hint"],
    meta: undefined,
  },
  "switch-demo": {
    name: "switch-demo",
    description: "Basic switch",
    type: "registry:example",
    registryDependencies: ["@coss/switch","@coss/label"],
    files: [{
      path: "registry/default/examples/switch-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/switch-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["switch","label"],
    meta: undefined,
  },
  "switch-disabled": {
    name: "switch-disabled",
    description: "Disabled switch",
    type: "registry:example",
    registryDependencies: ["@coss/switch","@coss/label"],
    files: [{
      path: "registry/default/examples/switch-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/switch-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["switch","label","disabled"],
    meta: undefined,
  },
  "switch-with-description": {
    name: "switch-with-description",
    description: "Switch with description",
    type: "registry:example",
    registryDependencies: ["@coss/switch","@coss/label"],
    files: [{
      path: "registry/default/examples/switch-with-description.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/switch-with-description.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["switch","label","helper","hint"],
    meta: undefined,
  },
  "switch-card": {
    name: "switch-card",
    description: "Card-style switch",
    type: "registry:example",
    registryDependencies: ["@coss/switch","@coss/label"],
    files: [{
      path: "registry/default/examples/switch-card.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/switch-card.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["switch","label","card"],
    meta: undefined,
  },
  "switch-form": {
    name: "switch-form",
    description: "Switch in a form",
    type: "registry:example",
    registryDependencies: ["@coss/switch","@coss/field","@coss/form","@coss/button"],
    files: [{
      path: "registry/default/examples/switch-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/switch-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["switch","form","field","button"],
    meta: undefined,
  },
  "table-demo": {
    name: "table-demo",
    description: "Basic table",
    type: "registry:example",
    registryDependencies: ["@coss/table","@coss/badge"],
    files: [{
      path: "registry/default/examples/table-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/table-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["table","badge"],
    meta: undefined,
  },
  "table-framed": {
    name: "table-framed",
    description: "Framed table",
    type: "registry:example",
    registryDependencies: ["@coss/table","@coss/badge","@coss/frame"],
    files: [{
      path: "registry/default/examples/table-framed.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/table-framed.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["table","badge","frame"],
    meta: undefined,
  },
  "tabs-demo": {
    name: "tabs-demo",
    description: "Tabs with default indicator",
    type: "registry:example",
    registryDependencies: ["@coss/tabs"],
    files: [{
      path: "registry/default/examples/tabs-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/tabs-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["tabs"],
    meta: undefined,
  },
  "tabs-underline": {
    name: "tabs-underline",
    description: "Tabs with underline indicator",
    type: "registry:example",
    registryDependencies: ["@coss/tabs"],
    files: [{
      path: "registry/default/examples/tabs-underline.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/tabs-underline.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["tabs"],
    meta: undefined,
  },
  "tabs-vertical": {
    name: "tabs-vertical",
    description: "Tabs with vertical layout",
    type: "registry:example",
    registryDependencies: ["@coss/tabs"],
    files: [{
      path: "registry/default/examples/tabs-vertical.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/tabs-vertical.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["tabs","vertical tabs"],
    meta: undefined,
  },
  "tabs-underline-vertical": {
    name: "tabs-underline-vertical",
    description: "Underline tabs with vertical layout",
    type: "registry:example",
    registryDependencies: ["@coss/tabs"],
    files: [{
      path: "registry/default/examples/tabs-underline-vertical.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/tabs-underline-vertical.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["tabs","vertical tabs"],
    meta: undefined,
  },
  "textarea-demo": {
    name: "textarea-demo",
    description: "Basic textarea",
    type: "registry:example",
    registryDependencies: ["@coss/textarea"],
    files: [{
      path: "registry/default/examples/textarea-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/textarea-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["textarea"],
    meta: undefined,
  },
  "textarea-sm": {
    name: "textarea-sm",
    description: "Small textarea",
    type: "registry:example",
    registryDependencies: ["@coss/textarea"],
    files: [{
      path: "registry/default/examples/textarea-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/textarea-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["textarea"],
    meta: undefined,
  },
  "textarea-lg": {
    name: "textarea-lg",
    description: "Large textarea",
    type: "registry:example",
    registryDependencies: ["@coss/textarea"],
    files: [{
      path: "registry/default/examples/textarea-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/textarea-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["textarea"],
    meta: undefined,
  },
  "textarea-disabled": {
    name: "textarea-disabled",
    description: "Disabled textarea",
    type: "registry:example",
    registryDependencies: ["@coss/textarea"],
    files: [{
      path: "registry/default/examples/textarea-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/textarea-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["textarea","disabled"],
    meta: undefined,
  },
  "textarea-with-label": {
    name: "textarea-with-label",
    description: "Textarea labelled with Field",
    type: "registry:example",
    registryDependencies: ["@coss/textarea","@coss/label"],
    files: [{
      path: "registry/default/examples/textarea-with-label.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/textarea-with-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["textarea","field","label"],
    meta: undefined,
  },
  "textarea-form": {
    name: "textarea-form",
    description: "Textarea in a form",
    type: "registry:example",
    registryDependencies: ["@coss/textarea","@coss/form","@coss/field","@coss/button"],
    files: [{
      path: "registry/default/examples/textarea-form.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/textarea-form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["textarea","form","field","button"],
    meta: undefined,
  },
  "toast-demo": {
    name: "toast-demo",
    description: "Status toast",
    type: "registry:example",
    registryDependencies: ["@coss/toast"],
    files: [{
      path: "registry/default/examples/toast-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toast-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toast","button"],
    meta: undefined,
  },
  "toast-loading": {
    name: "toast-loading",
    description: "Loading toast",
    type: "registry:example",
    registryDependencies: ["@coss/toast"],
    files: [{
      path: "registry/default/examples/toast-loading.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toast-loading.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toast","button","loading"],
    meta: undefined,
  },
  "toast-promise": {
    name: "toast-promise",
    description: "Drive toasts from promise states",
    type: "registry:example",
    registryDependencies: ["@coss/toast"],
    files: [{
      path: "registry/default/examples/toast-promise.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toast-promise.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toast","button"],
    meta: undefined,
  },
  "toast-with-action": {
    name: "toast-with-action",
    description: "Toast with an action button",
    type: "registry:example",
    registryDependencies: ["@coss/toast"],
    files: [{
      path: "registry/default/examples/toast-with-action.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toast-with-action.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toast","button"],
    meta: undefined,
  },
  "toast-with-status": {
    name: "toast-with-status",
    description: "Success toast",
    type: "registry:example",
    registryDependencies: ["@coss/toast"],
    files: [{
      path: "registry/default/examples/toast-with-status.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toast-with-status.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toast","button"],
    meta: undefined,
  },
  "toast-heights": {
    name: "toast-heights",
    description: "Toast with varying heights",
    type: "registry:example",
    registryDependencies: ["@coss/toast"],
    files: [{
      path: "registry/default/examples/toast-heights.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toast-heights.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toast"],
    meta: undefined,
  },
  "toggle-demo": {
    name: "toggle-demo",
    description: "Basic toggle",
    type: "registry:example",
    registryDependencies: ["@coss/toggle"],
    files: [{
      path: "registry/default/examples/toggle-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle"],
    meta: undefined,
  },
  "toggle-disabled": {
    name: "toggle-disabled",
    description: "Disabled toggle",
    type: "registry:example",
    registryDependencies: ["@coss/toggle"],
    files: [{
      path: "registry/default/examples/toggle-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle","disabled"],
    meta: undefined,
  },
  "toggle-group-demo": {
    name: "toggle-group-demo",
    description: "Toggle group",
    type: "registry:example",
    registryDependencies: ["@coss/toggle-group"],
    files: [{
      path: "registry/default/examples/toggle-group-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-group-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle group","toggle"],
    meta: undefined,
  },
  "toggle-group-sm": {
    name: "toggle-group-sm",
    description: "Toggle group with small toggles",
    type: "registry:example",
    registryDependencies: ["@coss/toggle-group"],
    files: [{
      path: "registry/default/examples/toggle-group-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-group-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle group","toggle"],
    meta: undefined,
  },
  "toggle-group-lg": {
    name: "toggle-group-lg",
    description: "Toggle group with large toggles",
    type: "registry:example",
    registryDependencies: ["@coss/toggle-group"],
    files: [{
      path: "registry/default/examples/toggle-group-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-group-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle group","toggle"],
    meta: undefined,
  },
  "toggle-group-outline": {
    name: "toggle-group-outline",
    description: "Toggle group with outline toggles",
    type: "registry:example",
    registryDependencies: ["@coss/toggle-group"],
    files: [{
      path: "registry/default/examples/toggle-group-outline.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-group-outline.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle group","toggle"],
    meta: undefined,
  },
  "toggle-group-outline-with-separator": {
    name: "toggle-group-outline-with-separator",
    description: "Toggle group with outline toggles and separator",
    type: "registry:example",
    registryDependencies: ["@coss/toggle-group"],
    files: [{
      path: "registry/default/examples/toggle-group-outline-with-separator.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-group-outline-with-separator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle group","toggle"],
    meta: undefined,
  },
  "toggle-group-disabled": {
    name: "toggle-group-disabled",
    description: "Disabled toggle group",
    type: "registry:example",
    registryDependencies: ["@coss/toggle-group"],
    files: [{
      path: "registry/default/examples/toggle-group-disabled.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-group-disabled.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle group","toggle","disabled"],
    meta: undefined,
  },
  "toggle-group-multiple": {
    name: "toggle-group-multiple",
    description: "Toggle group with multiple selection",
    type: "registry:example",
    registryDependencies: ["@coss/toggle-group"],
    files: [{
      path: "registry/default/examples/toggle-group-multiple.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-group-multiple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle group","toggle"],
    meta: undefined,
  },
  "toggle-group-with-disabled-item": {
    name: "toggle-group-with-disabled-item",
    description: "Toggle group with disabled item",
    type: "registry:example",
    registryDependencies: ["@coss/toggle-group"],
    files: [{
      path: "registry/default/examples/toggle-group-with-disabled-item.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-group-with-disabled-item.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle group","toggle","disabled"],
    meta: undefined,
  },
  "toggle-icon-group": {
    name: "toggle-icon-group",
    description: "Multiple toggles",
    type: "registry:example",
    registryDependencies: ["@coss/toggle"],
    files: [{
      path: "registry/default/examples/toggle-icon-group.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-icon-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle"],
    meta: undefined,
  },
  "toggle-lg": {
    name: "toggle-lg",
    description: "Large toggle",
    type: "registry:example",
    registryDependencies: ["@coss/toggle"],
    files: [{
      path: "registry/default/examples/toggle-lg.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-lg.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle"],
    meta: undefined,
  },
  "toggle-outline": {
    name: "toggle-outline",
    description: "Outline toggle",
    type: "registry:example",
    registryDependencies: ["@coss/toggle"],
    files: [{
      path: "registry/default/examples/toggle-outline.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-outline.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle"],
    meta: undefined,
  },
  "toggle-sm": {
    name: "toggle-sm",
    description: "Small toggle",
    type: "registry:example",
    registryDependencies: ["@coss/toggle"],
    files: [{
      path: "registry/default/examples/toggle-sm.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-sm.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle"],
    meta: undefined,
  },
  "toggle-with-icon": {
    name: "toggle-with-icon",
    description: "Toggle with icon",
    type: "registry:example",
    registryDependencies: ["@coss/toggle"],
    files: [{
      path: "registry/default/examples/toggle-with-icon.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toggle-with-icon.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toggle"],
    meta: undefined,
  },
  "toolbar-demo": {
    name: "toolbar-demo",
    description: "Toolbar",
    type: "registry:example",
    registryDependencies: ["@coss/button","@coss/select","@coss/toggle-group","@coss/toolbar","@coss/tooltip"],
    files: [{
      path: "registry/default/examples/toolbar-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/toolbar-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["toolbar","button","select","toggle","tooltip"],
    meta: undefined,
  },
  "tooltip-demo": {
    name: "tooltip-demo",
    description: "Basic tooltip",
    type: "registry:example",
    registryDependencies: ["@coss/tooltip","@coss/button"],
    files: [{
      path: "registry/default/examples/tooltip-demo.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/tooltip-demo.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["tooltip","button"],
    meta: undefined,
  },
  "tooltip-grouped": {
    name: "tooltip-grouped",
    description: "Toggle group with grouped tooltips",
    type: "registry:example",
    registryDependencies: ["@coss/tooltip","@coss/toggle-group"],
    files: [{
      path: "registry/default/examples/tooltip-grouped.tsx",
      type: "registry:example",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/examples/tooltip-grouped.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["tooltip","toggle group","toggle"],
    meta: undefined,
  },
  "comp-bu-1": {
    name: "comp-bu-1",
    description: "Back link button with chevron",
    type: "registry:block",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/particles/comp-bu-1.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/particles/comp-bu-1.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "comp-bu-2": {
    name: "comp-bu-2",
    description: "Card-style button with heading and description",
    type: "registry:block",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/particles/comp-bu-2.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/particles/comp-bu-2.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "comp-bu-3": {
    name: "comp-bu-3",
    description: "Directional pad control buttons",
    type: "registry:block",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/particles/comp-bu-3.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/particles/comp-bu-3.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "comp-bu-4": {
    name: "comp-bu-4",
    description: "Outline like button with count",
    type: "registry:block",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/particles/comp-bu-4.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/particles/comp-bu-4.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "comp-bu-5": {
    name: "comp-bu-5",
    description: "Social login icon buttons",
    type: "registry:block",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/particles/comp-bu-5.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/particles/comp-bu-5.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "comp-bu-6": {
    name: "comp-bu-6",
    description: "Expandable show more/less toggle button",
    type: "registry:block",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/particles/comp-bu-6.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/particles/comp-bu-6.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "comp-bu-7": {
    name: "comp-bu-7",
    description: "Star button with count badge",
    type: "registry:block",
    registryDependencies: ["@coss/button"],
    files: [{
      path: "registry/default/particles/comp-bu-7.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/particles/comp-bu-7.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["button"],
    meta: undefined,
  },
  "comp-fr-1": {
    name: "comp-fr-1",
    description: "Frame with collapsible content and delete button",
    type: "registry:example",
    registryDependencies: ["@coss/frame","@coss/collapsible","@coss/button"],
    files: [{
      path: "registry/default/particles/comp-fr-1.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/particles/comp-fr-1.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["frame","collapsible"],
    meta: undefined,
  },
  "comp-pa-1": {
    name: "comp-pa-1",
    description: "Pagination with previous and next buttons only",
    type: "registry:block",
    registryDependencies: ["@coss/pagination"],
    files: [{
      path: "registry/default/particles/comp-pa-1.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/particles/comp-pa-1.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["pagination"],
    meta: undefined,
  },
  "comp-pa-2": {
    name: "comp-pa-2",
    description: "Pagination with select, and previous and next buttons",
    type: "registry:block",
    registryDependencies: ["@coss/pagination","@coss/select"],
    files: [{
      path: "registry/default/particles/comp-pa-2.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/default/particles/comp-pa-2.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    categories: ["pagination","select"],
    meta: undefined,
  },
  }